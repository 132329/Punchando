! function(a) {
    "use strict";

    function b(a, b, c) {
        return a.addEventListener ? a.addEventListener(b, c, !1) : a.attachEvent ? a.attachEvent("on" + b, c) : void 0
    }

    function c(a, b) {
        var c, d;
        for (c = 0, d = a.length; d > c; c++)
            if (a[c] === b) return !0;
        return !1
    }

    function d(a, b) {
        var c;
        a.createTextRange ? (c = a.createTextRange(), c.move("character", b), c.select()) : a.selectionStart && (a.focus(), a.setSelectionRange(b, b))
    }

    function e(a, b) {
        try {
            return a.type = b, !0
        } catch (c) {
            return !1
        }
    }
    a.Placeholders = {
        Utils: {
            addEventListener: b,
            inArray: c,
            moveCaret: d,
            changeType: e
        }
    }
}(this),
function(a) {
    "use strict";

    function b() {}

    function c(a) {
        var b;
        return a.value === a.getAttribute(G) && "true" === a.getAttribute(H) ? (a.setAttribute(H, "false"), a.value = "", a.className = a.className.replace(F, ""), b = a.getAttribute(I), b && (a.type = b), !0) : !1
    }

    function d(a) {
        var b, c = a.getAttribute(G);
        return "" === a.value && c ? (a.setAttribute(H, "true"), a.value = c, a.className += " " + E, b = a.getAttribute(I), b ? a.type = "text" : "password" === a.type && R.changeType(a, "text") && a.setAttribute(I, "password"), !0) : !1
    }

    function e(a, b) {
        var c, d, e, f, g;
        if (a && a.getAttribute(G)) b(a);
        else
            for (c = a ? a.getElementsByTagName("input") : o, d = a ? a.getElementsByTagName("textarea") : p, g = 0, f = c.length + d.length; f > g; g++) e = g < c.length ? c[g] : d[g - c.length], b(e)
    }

    function f(a) {
        e(a, c)
    }

    function g(a) {
        e(a, d)
    }

    function h(a) {
        return function() {
            q && a.value === a.getAttribute(G) && "true" === a.getAttribute(H) ? R.moveCaret(a, 0) : c(a)
        }
    }

    function i(a) {
        return function() {
            d(a)
        }
    }

    function j(a) {
        return function(b) {
            return s = a.value, "true" === a.getAttribute(H) && s === a.getAttribute(G) && R.inArray(C, b.keyCode) ? (b.preventDefault && b.preventDefault(), !1) : void 0
        }
    }

    function k(a) {
        return function() {
            var b;
            "true" === a.getAttribute(H) && a.value !== s && (a.className = a.className.replace(F, ""), a.value = a.value.replace(a.getAttribute(G), ""), a.setAttribute(H, !1), b = a.getAttribute(I), b && (a.type = b)), "" === a.value && (a.blur(), R.moveCaret(a, 0))
        }
    }

    function l(a) {
        return function() {
            a === document.activeElement && a.value === a.getAttribute(G) && "true" === a.getAttribute(H) && R.moveCaret(a, 0)
        }
    }

    function m(a) {
        return function() {
            f(a)
        }
    }

    function n(a) {
        a.form && (x = a.form, x.getAttribute(J) || (R.addEventListener(x, "submit", m(x)), x.setAttribute(J, "true"))), R.addEventListener(a, "focus", h(a)), R.addEventListener(a, "blur", i(a)), q && (R.addEventListener(a, "keydown", j(a)), R.addEventListener(a, "keyup", k(a)), R.addEventListener(a, "click", l(a))), a.setAttribute(K, "true"), a.setAttribute(G, v), d(a)
    }
    var o, p, q, r, s, t, u, v, w, x, y, z, A, B = ["text", "search", "url", "tel", "email", "password", "number", "textarea"],
        C = [27, 33, 34, 35, 36, 37, 38, 39, 40, 8, 46],
        D = "#ccc",
        E = "placeholdersjs",
        F = new RegExp("(?:^|\\s)" + E + "(?!\\S)"),
        G = "data-placeholder-value",
        H = "data-placeholder-active",
        I = "data-placeholder-type",
        J = "data-placeholder-submit",
        K = "data-placeholder-bound",
        L = "data-placeholder-focus",
        M = "data-placeholder-live",
        N = document.createElement("input"),
        O = document.getElementsByTagName("head")[0],
        P = document.documentElement,
        Q = a.Placeholders,
        R = Q.Utils;
    if (Q.nativeSupport = void 0 !== N.placeholder, !Q.nativeSupport) {
        for (o = document.getElementsByTagName("input"), p = document.getElementsByTagName("textarea"), q = "false" === P.getAttribute(L), r = "false" !== P.getAttribute(M), t = document.createElement("style"), t.type = "text/css", u = document.createTextNode("." + E + " { color:" + D + "; }"), t.styleSheet ? t.styleSheet.cssText = u.nodeValue : t.appendChild(u), O.insertBefore(t, O.firstChild), A = 0, z = o.length + p.length; z > A; A++) y = A < o.length ? o[A] : p[A - o.length], v = y.attributes.placeholder, v && (v = v.nodeValue, v && R.inArray(B, y.type) && n(y));
        w = setInterval(function() {
            for (A = 0, z = o.length + p.length; z > A; A++) y = A < o.length ? o[A] : p[A - o.length], v = y.attributes.placeholder, v && (v = v.nodeValue, v && R.inArray(B, y.type) && (y.getAttribute(K) || n(y), (v !== y.getAttribute(G) || "password" === y.type && !y.getAttribute(I)) && ("password" === y.type && !y.getAttribute(I) && R.changeType(y, "text") && y.setAttribute(I, "password"), y.value === y.getAttribute(G) && (y.value = v), y.setAttribute(G, v))));
            r || clearInterval(w)
        }, 100)
    }
    Q.disable = Q.nativeSupport ? b : f, Q.enable = Q.nativeSupport ? b : g
}(this);


/* scroll-to-top.js v1.0 */
jQuery(function() {
    jQuery('body').prepend('<div class="scroll-topnbt"></div>');
    var scrollButtonEl = jQuery('.scroll-topnbt');
    scrollButtonEl.hide();
    jQuery(window).scroll(function() {
        if (jQuery(window).scrollTop() < 20) {
            jQuery('.scroll-topnbt').fadeOut();
        } else {
            jQuery('.scroll-topnbt').fadeIn();
        }
    });
    scrollButtonEl.click(function() {
        jQuery("html, body").animate({
            scrollTop: 0
        }, 300);
        return false;
    });
});

jQuery(document).ready(function($) {
    var stickyHeaderTop = $('.menu-boxnbt').offset().top;
    $(window).scroll(function() {
        if ($(window).scrollTop() > stickyHeaderTop) {
            $('.menu-boxnbt').addClass("sticky-navnbt");
        } else {
            $('.menu-boxnbt').removeClass("sticky-navnbt");
        }
    });
});

/**
 * @preserve SelectNav.js (v. 0.1)
 * Converts your <ul>/<ol> navigation into a dropdown list for small screens
 * https://github.com/lukaszfiszer/selectnav.js
 */
window.selectnav = (function() {
    "use strict";
    var selectnav = function(element, options) {
        element = document.getElementById(element);
        // return immediately if element doesn't exist
        if (!element) {
            return;
        }
        // return immediately if element is not a list
        if (!islist(element)) {
            return;
        }
        // add a js class to <html> tag
        document.documentElement.className += " js";
        // retreive options and set defaults
        var o = options || {},
            activeclass = o.activeclass || 'active',
            autoselect = typeof(o.autoselect) === "boolean" ? o.autoselect : true,
            nested = typeof(o.nested) === "boolean" ? o.nested : true,
            indent = o.indent || "?",
            label = o.label || "- MENU -",
            // helper variables
            level = 0,
            selected = " selected ";
        // insert the freshly created dropdown navigation after the existing navigation
        element.insertAdjacentHTML('afterend', parselist(element));
        var nav = document.getElementById(id());
        // autoforward on click
        if (nav.addEventListener) {
            nav.addEventListener('change', goTo);
        }
        if (nav.attachEvent) {
            nav.attachEvent('onchange', goTo);
        }
        return nav;

        function goTo(e) {
            // Crossbrowser issues - http://www.quirksmode.org/js/events_properties.html
            var targ;
            if (!e) e = window.event;
            if (e.target) targ = e.target;
            else if (e.srcElement) targ = e.srcElement;
            if (targ.nodeType === 3) // defeat Safari bug
                targ = targ.parentNode;
            if (targ.value) window.location.href = targ.value;
        }

        function islist(list) {
            var n = list.nodeName.toLowerCase();
            return (n === 'ul' || n === 'ol');
        }

        function id(nextId) {
            for (var j = 1; document.getElementById('selectnav' + j); j++);
            return (nextId) ? 'selectnav' + j : 'selectnav' + (j - 1);
        }

        function parselist(list) {
            // go one level down
            level++;
            var length = list.children.length,
                html = '',
                prefix = '',
                k = level - 1;
            // return immediately if has no children
            if (!length) {
                return;
            }
            if (k) {
                while (k--) {
                    prefix += indent;
                }
                prefix += " ";
            }
            for (var i = 0; i < length; i++) {
                var link = list.children[i].children[0];
                if (typeof(link) !== 'undefined') {
                    var text = link.innerText || link.textContent;
                    var isselected = '';
                    if (activeclass) {
                        isselected = link.className.search(activeclass) !== -1 || link.parentElement.className.search(activeclass) !== -1 ? selected : '';
                    }
                    if (autoselect && !isselected) {
                        isselected = link.href === document.URL ? selected : '';
                    }
                    html += '<option value="' + link.href + '" ' + isselected + '>' + prefix + text + '</option>';
                    if (nested) {
                        var subElement = list.children[i].children[1];
                        if (subElement && islist(subElement)) {
                            html += parselist(subElement);
                        }
                    }
                }
            }
            // adds label
            if (level === 1 && label) {
                html = '<option value="">' + label + '</option>' + html;
            }
            // add <select> tag to the top level of the list
            if (level === 1) {
                html = '<select class="selectnav" id="' + id(true) + '">' + html + '</select>';
            }
            // go 1 level up
            level--;
            return html;
        }
    };
    return function(element, options) {
        selectnav(element, options);
    };
})();

jQuery(document).ready(function() {
    jQuery("#sidebarnbt .widget h2").wrapInner("<span class='sidebar-headline-textnbt'></span>");
    jQuery("#sidebarnbt .widget h3").wrapInner("<span class='sidebar-headline-textnbt'></span>");
    jQuery("#footernbt .widget h2").wrapInner("<span class='footer-headline-textnbt'></span>");
    jQuery("#footernbt .widget h3").wrapInner("<span class='footer-headline-textnbt'></span>");
    /* Responzive.js v1.0 */
    selectnav('navnbt');
    selectnav('top-navnbt');
});

function SwitchTab(flag)
{
    if(flag==true)
    {
        $('#divsidebar-tab2').show();
        $('#lnktab2').addClass('active');
        $('#divsidebar-tab1').hide();
        $('#lnktab1').removeClass('active');
    }
    else
    {
        $('#divsidebar-tab2').hide();
        $('#lnktab2').removeClass('active');
        $('#divsidebar-tab1').show();
        $('#lnktab1').addClass('active');
    }
}