@model SGC_MVC.Models.ViewModels.LegalBasisViewModel
@using SGC_MVC.CustomCode
@using System.Resources
@using SGC_MVC.Properties
@{ 
    System.Threading.Thread.CurrentThread.CurrentUICulture = System.Globalization.CultureInfo.CreateSpecificCulture("es");
    ViewBag.Title = "Crear Base legal";       
}

<div class="section_title fluid_wrap">
    <div class="col-lg-8 pl0">
        <h1 class="the_title">@Helper.t("BL_Title")</h1>
    </div>
    <div class="col-lg-4 pr0"></div>
</div>

<div class="drag_and_drop_container fluid_wrap reset">
    <div class="drag_container_title">
        <h2>Datos del Documento de Base Legal</h2>
    </div>
    <div class="drag_container_the_content_area drag_content_area_fluid_wrap">
        @using (Html.BeginForm("Create", "BaseLegal", FormMethod.Post, new { enctype = "multipart/form-data", @class = "standard_form fluid_wrap" }))
        {
            @Html.ValidationSummary(true)

            <fieldset>
                @Html.Hidden("validateComposite", "Document(title,documentTypeID)&Nombre&Tipo")
                @Html.HiddenFor(model => model.documentTypeID)
                <legend></legend>
                <ul class="form_items_container col-lg-6 pl0">
                    <li>
                        @Html.LabelForR(model => model.name)
                        @Html.TextBoxFor(model => model.name, new { @class = "col-lg-12 form-control" })
                        @Html.ValidationMessageFor(model => model.name)
                    </li>
                    <li>
                        @Html.LabelForR(model => model.description)
                        @Html.TextAreaFor(model => model.description, new { @class = "col-lg-12 form-control textarea_level2" })
                        @Html.ValidationMessageFor(model => model.description)
                    </li>
                    <li>
                        @Html.LabelForR(model => model.Document)
                        @Html.TextBoxFor(model => model.Document, new { @class = "fieldInput", type = "file" })
                        @Html.TextBox("Cargar", "", new { id = "filename", @readonly = true, @class = "falseInputFile col-lg-8" })
                        <span class="filetrigger" title="Los tipos de extensiones permitidas son: doc, docx, xlsx, pdf, txt, xls.">Upload</span>
                        <input type="button" id="clearInput" class="eraseInput eraseFile" value="Quitar" title="Quitar Archivo" />
                        @Html.ValidationMessageFor(model => model.Document)
                    </li>
                    <li>
                        <ul class="form_items_container col-lg-8 pl0">
                            <li>
                                <p>
                                    <input type="submit" value="Crear" class="button_save btstyles col-lg-5" />
                                    @Html.ActionLink("Regresar", "Index", null, new { @class = "button_go_back btstyles col-lg-5" })
                                </p>
                            </li>
                        </ul>
                    </li>
                </ul>
            </fieldset>
        }
    </div>
    <!--end drag_container_the_content_area-->
</div>
<!--end drag_and_drop_container-->

@section Scripts {
}
