@model SGC_MVC.Models.ViewModels.LegalBasisViewModel
@using SGC_MVC.CustomCode;
@{ 
    ViewBag.Title = "Editar base legal";
}

<div class="section_title fluid_wrap">
    <div class="col-lg-8 pl0">
        <h1 class="the_title">Editar Documento de Base Legal</h1>
    </div>
    <div class="col-lg-4 pr0"></div>
</div>

<div class="drag_and_drop_container fluid_wrap reset">
    <div class="drag_container_title">
        <h2>Datos del Documento de Base Legal</h2>
    </div>
    <div class="drag_container_the_content_area drag_content_area_fluid_wrap">
        @using (Html.BeginForm("Edit", "BaseLegal", FormMethod.Post, new { enctype = "multipart/form-data", @class = "standard_form fluid_wrap" }))
        {
            @Html.ValidationSummary(true)

            <fieldset>
                <legend></legend>
                <ul class="form_items_container col-lg-6 pl0">
                    @Html.HiddenFor(model => model.docId)
                    @Html.Hidden("urlFile", SGC_MVC.CustomCode.Helper.getFileNameWithOutFormat(Model.url, true), new { @class = "hiddenName" })
                    @Html.HiddenFor(model => model.url)
                    @Html.HiddenFor(model => model.companyID)
                    @Html.Hidden("validateComposite", "Document(title,documentTypeID)&Nombre&Tipo")
                    @Html.HiddenFor(model => model.documentTypeID)
                    <li>
                        @Html.LabelForR(model => model.name)
                        @Html.TextBoxFor(model => model.name, new { @class = "col-lg-12 form-control" })
                        @Html.ValidationMessageFor(model => model.name)
                    </li>

                    <li>
                        @Html.LabelForR(model => model.description)
                        @Html.TextAreaFor(model => model.description, new { @class = "col-lg-12 form-control textarea_level2" })
                        @Html.ValidationMessageFor(model => model.description)
                    </li>
                    <li>
                        @if (!string.IsNullOrEmpty(Model.url))
                        {
                            @Html.Label("Documento Actual")
                            @Html.ActionLink(
                                SGC_MVC.CustomCode.Helper.getFileNameWithOutFormat(Model.url),   
                                Path.GetFileName(Model.url), "Uploads", "", 
                                new { download = SGC_MVC.CustomCode.Helper.getFileNameWithOutFormat(Model.url) })
                        }
                    </li>
                    <li>
                        @Html.LabelForR(model => model.Document, "Subir nuevo archivo")
                        @Html.TextBoxFor(model => model.Document, new { @class = "fieldInput", type = "file" })
                        @Html.TextBox("Cargar", "", new { id = "filename", @readonly = true, @class = "falseInputFile col-lg-8" })
                        <span class="filetrigger" title="Los tipos de extensiones permitidas son: doc, docx, xlsx, pdf, txt, xls.">Upload</span>
                        <input type="button" id="clearInput" class="eraseInput eraseFile" value="Quitar" title="Quitar Archivo" />
                        @Html.ValidationMessageFor(model => model.Document)
                    </li>
                    <li>
                        <div class="form_items_container col-lg-8 pl0">
                            <p>
                                <input type="submit" value="Guardar" class="button_save btstyles col-lg-5 btSubmit" />
                                @Html.ActionLink("Cancelar", "Index", null, new { @class = "button_cancel btstyles col-lg-5" })
                            </p>

                        </div>

                    </li>
                </ul>
            </fieldset>
            <div class="fileChange dn">
                <h2>El Documento asociado cambió</h2>
                <label>¿Desea  guardar los cambios de todas formas?</label>
            </div>
        }
    </div>
    <!--end drag_container_the_content_area-->
</div>
<!--end drag_and_drop_container-->

@section Scripts {
    <script>
        $('.falseInputFile').val($('.hiddenName').val());
    </script>
}
